// <auto-generated />
using System;
using ExtraSW.IDP.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExtraSW.IDP.Migrations
{
    [DbContext(typeof(IdentityDbContext))]
    [Migration("20210524230101_puttingusernavigationagain")]
    partial class puttingusernavigationagain
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ExtraSW.IDP.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Subject")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasFilter("[UserName] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"),
                            Active = true,
                            ConcurrencyStamp = "fe79f8df-cf02-4baa-ae9c-6af2bdb4591c",
                            Password = "password",
                            Subject = "d860efca-22d9-47fd-8249-791ba61b07c7",
                            UserName = "Admin"
                        },
                        new
                        {
                            Id = new Guid("96053525-d4a5-47ee-855e-0ea77fa6c55a"),
                            Active = true,
                            ConcurrencyStamp = "ec5f55a5-96a5-4ade-b14a-4f753ede31b6",
                            Password = "password",
                            Subject = "b7539694-97e7-4dfe-84da-b4256e1ff5c7",
                            UserName = "Vendor"
                        });
                });

            modelBuilder.Entity("ExtraSW.IDP.Entities.UserClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");

                    b.HasData(
                        new
                        {
                            Id = new Guid("174b326c-dd14-4f7a-b604-1cec48dc440c"),
                            ConcurrencyStamp = "dd1fc331-e967-43a4-8061-b36debf989b1",
                            Type = "given_name",
                            UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"),
                            Value = "Alice"
                        },
                        new
                        {
                            Id = new Guid("923201f4-9953-4937-ae2b-1f467cbf4e0c"),
                            ConcurrencyStamp = "ff978cb5-369b-40f3-96a4-b9a132fffaa9",
                            Type = "family_name",
                            UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"),
                            Value = "Smith"
                        },
                        new
                        {
                            Id = new Guid("4343c5fd-b732-4eed-bc3c-63ee4641d852"),
                            ConcurrencyStamp = "aed303a8-2f40-4ba1-bada-19fea6a87529",
                            Type = "role",
                            UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"),
                            Value = "Admin"
                        },
                        new
                        {
                            Id = new Guid("56c59b65-27c8-46ca-86ba-02cb7cf5ce39"),
                            ConcurrencyStamp = "4020a1a6-51eb-4061-b296-d0a644a8aef7",
                            Type = "given_name",
                            UserId = new Guid("96053525-d4a5-47ee-855e-0ea77fa6c55a"),
                            Value = "Will"
                        },
                        new
                        {
                            Id = new Guid("b11162f3-6db9-44c6-9d67-06ad965c6030"),
                            ConcurrencyStamp = "d11a83d1-08c9-4728-b3aa-4295021a53f1",
                            Type = "family_name",
                            UserId = new Guid("96053525-d4a5-47ee-855e-0ea77fa6c55a"),
                            Value = "Smith"
                        },
                        new
                        {
                            Id = new Guid("1fc6d943-a6d8-4f5e-9ca6-58213216bc8b"),
                            ConcurrencyStamp = "3ee6d1a4-962c-4261-a59d-1d5aa6567e7f",
                            Type = "role",
                            UserId = new Guid("96053525-d4a5-47ee-855e-0ea77fa6c55a"),
                            Value = "Vendor"
                        });
                });

            modelBuilder.Entity("ExtraSW.IDP.Entities.UserClaim", b =>
                {
                    b.HasOne("ExtraSW.IDP.Entities.User", "User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ExtraSW.IDP.Entities.User", b =>
                {
                    b.Navigation("Claims");
                });
#pragma warning restore 612, 618
        }
    }
}
