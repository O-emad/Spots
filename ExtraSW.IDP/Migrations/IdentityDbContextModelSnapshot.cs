// <auto-generated />
using System;
using ExtraSW.IDP.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExtraSW.IDP.Migrations
{
    [DbContext(typeof(IdentityDbContext))]
    partial class IdentityDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ExtraSW.IDP.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Subject")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasFilter("[UserName] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"),
                            Active = true,
                            ConcurrencyStamp = "3e371a01-cc62-4c05-9adc-3d35337ada2f",
                            Password = "password",
                            Subject = "d860efca-22d9-47fd-8249-791ba61b07c7",
                            UserName = "Admin"
                        },
                        new
                        {
                            Id = new Guid("96053525-d4a5-47ee-855e-0ea77fa6c55a"),
                            Active = true,
                            ConcurrencyStamp = "ccda23df-8d4c-42a9-b33a-b0eae3fa051b",
                            Password = "password",
                            Subject = "b7539694-97e7-4dfe-84da-b4256e1ff5c7",
                            UserName = "Vendor"
                        });
                });

            modelBuilder.Entity("ExtraSW.IDP.Entities.UserClaim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8e587152-9fb5-434d-a595-6b741909f7c1"),
                            ConcurrencyStamp = "4265f648-baef-4202-94a5-0f44f273c0ed",
                            Type = "given-name",
                            UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"),
                            Value = "Alice"
                        },
                        new
                        {
                            Id = new Guid("8fbec63c-a0aa-474e-b74b-74973566080e"),
                            ConcurrencyStamp = "938477eb-f5a8-4634-8db5-a55b47578179",
                            Type = "family-name",
                            UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"),
                            Value = "Smith"
                        },
                        new
                        {
                            Id = new Guid("4ca78cf6-7bab-4496-a354-4f969ded9333"),
                            ConcurrencyStamp = "ebfb6a2f-3310-403b-9338-d75db268aa39",
                            Type = "role",
                            UserId = new Guid("13229d33-99e0-41b3-b18d-4f72127e3971"),
                            Value = "admin"
                        },
                        new
                        {
                            Id = new Guid("7f6fb4bf-4a19-41bd-9950-56016d7f573b"),
                            ConcurrencyStamp = "565d6573-9a2e-40a9-b2e0-322ded8db931",
                            Type = "given-name",
                            UserId = new Guid("96053525-d4a5-47ee-855e-0ea77fa6c55a"),
                            Value = "Will"
                        },
                        new
                        {
                            Id = new Guid("4f220b22-6147-4437-9169-c533b45a3be8"),
                            ConcurrencyStamp = "b58a38b7-f07b-45dd-8d5d-9bc2efc8ed15",
                            Type = "family-name",
                            UserId = new Guid("96053525-d4a5-47ee-855e-0ea77fa6c55a"),
                            Value = "Smith"
                        },
                        new
                        {
                            Id = new Guid("0881566d-5229-4667-b0fd-5e889c2fa28c"),
                            ConcurrencyStamp = "e3bc55ac-a790-4bfc-894c-180d005c4c34",
                            Type = "role",
                            UserId = new Guid("96053525-d4a5-47ee-855e-0ea77fa6c55a"),
                            Value = "vendor"
                        });
                });

            modelBuilder.Entity("ExtraSW.IDP.Entities.UserClaim", b =>
                {
                    b.HasOne("ExtraSW.IDP.Entities.User", "User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ExtraSW.IDP.Entities.User", b =>
                {
                    b.Navigation("Claims");
                });
#pragma warning restore 612, 618
        }
    }
}
